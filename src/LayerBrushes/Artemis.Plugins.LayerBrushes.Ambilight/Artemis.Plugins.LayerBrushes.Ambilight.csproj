<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFramework>net5.0-windows</TargetFramework>
    <ShouldIncludeNativeSkiaSharp>false</ShouldIncludeNativeSkiaSharp>
    <AssemblyName>Artemis.Plugins.LayerBrushes.Ambilight</AssemblyName>
    <RootNamespace>Artemis.Plugins.LayerBrushes.Ambilight</RootNamespace>
    <UseWPF>true</UseWPF>
    <Platforms>x64</Platforms>
    <GenerateDependencyFile>False</GenerateDependencyFile>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <ProduceReferenceAssembly>False</ProduceReferenceAssembly>
    <PowerShell># 2&gt;nul || type %~df0|find /v "setlocal"|find /v "errorlevel"|powershell.exe -noninteractive -&amp; exit %errorlevel% || #</PowerShell>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)'=='Debug'">
    <DefineConstants>$(DefineConstants);TRACE;DEBUG</DefineConstants>
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)' == 'Release'">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <NoWarn>$(NoWarn);CS1591;CS1572;CS1573</NoWarn>
    <DefineConstants>$(DefineConstants);RELEASE</DefineConstants>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <PlatformTarget>x64</PlatformTarget>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="MaterialDesignExtensions" Version="3.3.0" PrivateAssets="All" />
    <PackageReference Include="MaterialDesignThemes" Version="4.0.0" PrivateAssets="All" />
    <PackageReference Include="FluentValidation" Version="10.0.0" PrivateAssets="All" />
    <PackageReference Include="Serilog" Version="2.10.0" />
    <PackageReference Include="SkiaSharp" Version="2.80.2" PrivateAssets="All" />
    <PackageReference Include="Stylet" Version="1.3.6" PrivateAssets="All" />
    <PackageReference Include="Vortice.Direct3D11" Version="1.9.41" />
  </ItemGroup>

  <ItemGroup>
    <Page Include="Properties\DesignTimeResources.xaml" Condition="'$(DesignTime)'=='true' OR ('$(SolutionPath)'!='' AND Exists('$(SolutionPath)') AND '$(BuildingInsideVisualStudio)'!='true' AND '$(BuildingInsideExpressionBlend)'!='true')">
      <Generator>MSBuild:Compile</Generator>
      <SubType>Designer</SubType>
      <ContainsDesignTimeResources>true</ContainsDesignTimeResources>
    </Page>
  </ItemGroup>

  <ItemGroup>
    <Reference Include="Artemis.Core">
      <HintPath>..\..\..\..\Artemis\src\Artemis.UI\bin\net5.0-windows\Artemis.Core.dll</HintPath>
      <Private>false</Private>
    </Reference>
    <Reference Include="Artemis.UI.Shared">
      <HintPath>..\..\..\..\Artemis\src\Artemis.UI\bin\net5.0-windows\Artemis.UI.Shared.dll</HintPath>
      <Private>false</Private>
    </Reference>
    <Reference Include="ScreenCapture">
      <HintPath>libs\ScreenCapture.dll</HintPath>
    </Reference>
    <!-- TODO: Replace with PackageReferences when moving to Nuget -->

  </ItemGroup>

  <ItemGroup>
    <None Update="plugin.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
  </ItemGroup>

  <ItemGroup>
    <Page Update="UI\CapturePropertiesView.xaml">
      <XamlRuntime>$(DefaultXamlRuntime)</XamlRuntime>
      <SubType>Designer</SubType>
    </Page>
  </ItemGroup>

  <!-- This may trigger another build (something related to the obj folder) so only run it if building inside VS -->
  <Target Name="PostBuildPublish" AfterTargets="PostBuildEvent" Condition="'$(BuildingInsideVisualStudio)' == 'true'">
    <PropertyGroup>
      <publishScript>
        $(PowerShell)
        $json = (Get-Content "plugin.json" -Raw) | ConvertFrom-Json
        $env:ProgramData + "\Artemis\plugins\" + ($json.Main -split ".dll" | Select -First 1) + "-" + $json.Guid.Substring(0,8)
      </publishScript>
    </PropertyGroup>
    <Exec Command="$(publishScript)" EchoOff="true" ConsoleToMSBuild="true">
      <Output TaskParameter="ConsoleOutput" PropertyName="pluginDirectory" />
    </Exec>
    <Message Text="------ Artemis plugin publish ------" Importance="High" />
    <Exec Command="dotnet publish --verbosity q --output &quot;$(pluginDirectory)&quot;" />
    <Message Text="Published $(ProjectName) at file:\\$(pluginDirectory)" Importance="High" />
    <Message Text="If distributing outside the workshop, share this folder." Importance="High" />
  </Target>

  <!-- Override the published DLLs with the built DLLs to enable edit & continue -->
  <Target Name="PostBuildLocalDlls" AfterTargets="PostBuildEvent" Condition="'$(BuildingInsideVisualStudio)' == 'true'">
    <ItemGroup>
      <DllFiles Include="$(TargetDir)\**\*.dll" />
    </ItemGroup>
    <Copy SourceFiles="@(DllFiles)" DestinationFolder="$(pluginDirectory)" />
  </Target>
</Project>